{"version":3,"sources":["services/forums.js","reducers/forumsReducer.js","services/login.js","services/user.js","reducers/messageReducer.js","reducers/userReducer.js","reducers/allUsersReducer.js","components/Users.js","components/User.js","components/Forum.js","components/LoginForm.js","components/ForumForm.js","components/Notification.js","components/Navigation.js","components/SignUpForm.js","App.js","store.js","index.js"],"names":["baseUrl","token","getUserInfo","jwt","create","newObject","config","headers","Authorization","axios","post","response","data","setToken","newToken","getAll","get","then","update","id","user","put","deleteForum","delete","getAllUsers","newComment","comment","reducer","state","action","type","map","item","filter","login","credentials","signUp","setSuccessMessage","message","dispatch","text","removeMessage","setErrorMessage","setTimeout","setUser","loggedUserJSON","window","localStorage","getItem","JSON","parse","forumService","userLogin","username","password","loginService","setItem","stringify","name","Users","useDispatch","users","useSelector","forums","useEffect","className","to","length","User","forum","title","ExpandMore","styled","props","expand","other","IconButton","theme","transform","transition","transitions","duration","shortest","Forum","React","useState","expanded","setExpanded","navigate","useNavigate","allowRemove","setAllowRemove","forumUser","Card","sx","width","CardHeader","onClick","confirm","author","error","float","CardContent","style","wordWrap","Typography","variant","gutterBottom","createdAt","split","color","class","content","href","url","CardActions","disableSpacing","likes","newForum","addLikeToForum","marginLeft","Collapse","in","timeout","unmountOnExit","onSubmit","e","preventDefault","target","value","updatedForum","comments","index","useStyles","makeStyles","field","marginTop","marginBottom","display","LoginForm","setUsername","setPassword","classes","handleLogin","event","Grid","container","justify","alignItems","direction","minHeight","spacing","TextField","label","onChange","required","ButtonGroup","Button","component","Link","ForumForm","setTitle","setAuthor","setUrl","setContent","titleError","setTitleError","authorError","setAuthorError","urlError","setUrlError","contentError","setContentError","Container","addForum","fullWidth","multiline","rows","endIcon","Alert","elevation","Notification","severity","root","flexGrow","menuButton","marginRight","Navigation","currentUser","handleLogout","removeItem","AppBar","position","Toolbar","FormGroup","FormControlLabel","control","Tooltip","fontSize","disableElevation","SignUpForm","setName","usernameError","setUserError","passwordError","setPasswordError","nameError","setNameError","userService","userCreate","createTheme","palette","primary","main","secondary","lightBlue","App","matchUserId","useMatch","userForums","params","matchForumId","currentForum","find","ThemeProvider","maxWidth","path","element","List","sort","a","b","ListItem","button","ListItemText","primaryTypographyProps","whiteSpace","overflow","textOverflow","secondaryTypographyProps","Divider","store","configureStore","forumsReducer","messageReducer","userReducer","allUsersReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5fb9929b.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport jwt from 'jwt-decode'\r\nconst baseUrl = '/api/forums'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getUserInfo = () => {\r\n  return token ? jwt(token) : false\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const user = getUserInfo()\r\n  const request = axios.put(`${baseUrl}/${id}`, { ...newObject, user: user.id })\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst newComment = (id, comment) => {\r\n  const request = axios.post(`${baseUrl}/${id}/comments`, { comment })\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst deleteForum = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst getAllUsers = () => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.get('/api/users', config)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nexport default {\r\n  setToken,\r\n  getUserInfo,\r\n  getAll,\r\n  create,\r\n  update,\r\n  deleteForum,\r\n  getAllUsers,\r\n  newComment,\r\n}\r\n","import forumService from '../services/forums'\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'NEW_LIKE':\r\n  case 'NEW_COMMENT':\r\n    return state.map((item) =>\r\n      item.id !== action.data.id ? item : action.data\r\n    )\r\n\r\n  case 'NEW_FORUM':\r\n    return [...state, action.data]\r\n\r\n  case 'DELETE_FORUM':\r\n    return state.filter((item) => item.id !== action.data.id)\r\n\r\n  case 'INIT_FORUMS':\r\n    return action.data\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport const initializeForums = () => {\r\n  return async (dispatch) => {\r\n    const forums = await forumService.getAll()\r\n    dispatch({\r\n      type: 'INIT_FORUMS',\r\n      data: forums,\r\n    })\r\n  }\r\n}\r\n\r\nexport const addForum = (title, content, author, url) => {\r\n  return async (dispatch) => {\r\n    const newForum = await forumService.create({\r\n      title,\r\n      content,\r\n      author,\r\n      url,\r\n    })\r\n    dispatch({\r\n      type: 'NEW_FORUM',\r\n      data: newForum,\r\n    })\r\n  }\r\n}\r\n\r\nexport const addComment = (id, comment) => {\r\n  return async (dispatch) => {\r\n    const updatedForum = await forumService.newComment(id, comment)\r\n    dispatch({\r\n      type: 'NEW_COMMENT',\r\n      data: updatedForum,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteForum = (id) => {\r\n  return async (dispatch) => {\r\n    await forumService.deleteForum(id)\r\n    dispatch({\r\n      type: 'DELETE_FORUM',\r\n      data: { id },\r\n    })\r\n  }\r\n}\r\n\r\nexport const addLikeToForum = (forum) => {\r\n  return async (dispatch) => {\r\n    const newForum = await forumService.update(forum.id, {\r\n      ...forum,\r\n      likes: forum.likes + 1,\r\n    })\r\n    dispatch({\r\n      type: 'NEW_LIKE',\r\n      data: newForum,\r\n    })\r\n  }\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst signUp = async (user) => {\r\n  const response = await axios.post(baseUrl, user)\r\n  return response.data\r\n}\r\n\r\nexport default { signUp }","const reducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'SET_MESSAGE':\r\n    return action.data\r\n\r\n  case 'REMOVE_MESSAGE':\r\n    return null\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n\r\n\r\nexport const setSuccessMessage = (message) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'SET_MESSAGE',\r\n      data: {\r\n        text: message,\r\n        type: 'success',\r\n      },\r\n    })\r\n    removeMessage(dispatch)\r\n  }\r\n}\r\n\r\nexport const setErrorMessage = (message) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'SET_MESSAGE',\r\n      data: {\r\n        text: message,\r\n        type: 'error',\r\n      },\r\n    })\r\n    removeMessage(dispatch)\r\n  }\r\n}\r\n\r\nconst removeMessage = (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch({\r\n      type: 'REMOVE_MESSAGE',\r\n    })\r\n  }, 8000)\r\n}\r\n","import forumService from '../services/forums'\r\nimport loginService from '../services/login'\r\nimport userService from '../services/user'\r\nimport { setSuccessMessage, setErrorMessage } from './messageReducer'\r\n\r\nconst reducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'SET_USER':\r\n    return action.data\r\n\r\n  case 'LOGOUT_USER':\r\n    return null\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport const setUser = () => {\r\n  const loggedUserJSON = window.localStorage.getItem('loggedForumappUser')\r\n  if (loggedUserJSON) {\r\n    const user = JSON.parse(loggedUserJSON)\r\n    forumService.setToken(user.token)\r\n    return {\r\n      type: 'SET_USER',\r\n      data: user,\r\n    }\r\n  }\r\n\r\n  return { type: 'LOGOUT_USER' }\r\n}\r\n\r\nexport const userLogout = () => {\r\n  window.localStorage.removeItem('loggedForumappUser')\r\n  return { type: 'LOGOUT_USER' }\r\n}\r\n\r\nexport const userLogin = (username, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password,\r\n      })\r\n      window.localStorage.setItem('loggedForumappUser', JSON.stringify(user))\r\n      forumService.setToken(user.token)\r\n      dispatch(setUser())\r\n      dispatch(setSuccessMessage(`Welcome ${user.name}`))\r\n    } catch (error) {\r\n      dispatch(setErrorMessage('Wrong username or password'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const userCreate = (username, name, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await userService.signUp({\r\n        username,\r\n        name,\r\n        password,\r\n      })\r\n      dispatch(setSuccessMessage('Sign up successful'))\r\n    } catch (error) {\r\n      dispatch(setErrorMessage('Username taken'))\r\n    }\r\n  }\r\n}\r\n","import forumService from '../services/forums'\r\n\r\nconst reducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'GET_USERS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport const getUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await forumService.getAllUsers()\r\n    dispatch({\r\n      type: 'GET_USERS',\r\n      data: users,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getUsers } from '../reducers/allUsersReducer'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Users = () => {\r\n  const dispatch = useDispatch()\r\n  const users = useSelector((state) => state.users)\r\n  const forums = useSelector((state) => state.forums)\r\n  useEffect(() => {\r\n    dispatch(getUsers())\r\n  }, [forums])\r\n  return (\r\n    <div className=\"users\">\r\n      <h2>Users</h2>\r\n      {users && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>forums created</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => {\r\n              return (\r\n                <tr key={user.id}>\r\n                  <td>\r\n                    <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n                  </td>\r\n                  <td>{user.forums.length}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import React from 'react'\r\n\r\nconst User = ({ forums }) => {\r\n  if (!forums[0]) {\r\n    return <h2>Nothing to show 👀</h2>\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>{forums[0].user.name}</h2>\r\n      <p>added forums</p>\r\n      <ul>\r\n        {forums.map((forum) => {\r\n          return <li key={forum.id}>{forum.title}</li>\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React, { useEffect, useState } from 'react'\r\nimport { styled } from '@mui/material/styles'\r\nimport Card from '@mui/material/Card'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport CardActions from '@mui/material/CardActions'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport FavoriteIcon from '@mui/icons-material/Favorite'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport forumService from '../services/forums'\r\nimport { addLikeToForum, deleteForum, addComment } from '../reducers/forumsReducer'\r\nimport { setSuccessMessage, setErrorMessage } from '../reducers/messageReducer'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst ExpandMore = styled((props) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { expand, ...other } = props\r\n  return <IconButton {...other} />\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}))\r\nconst Forum = ({ forum }) => {\r\n  const [expanded, setExpanded] = React.useState(false)\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const [allowRemove, setAllowRemove] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const user = forumService.getUserInfo()\r\n    const forumUser = forum.user.id || forum.user\r\n    setAllowRemove(forumUser === user.id)\r\n  }, [])\r\n\r\n  const addLike = () => {\r\n    try {\r\n      dispatch(addLikeToForum(forum))\r\n      dispatch(\r\n        setSuccessMessage(\r\n          `new like to forum ${forum.title} by ${forum.author} added`\r\n        )\r\n      )\r\n    } catch (error) {\r\n      dispatch(\r\n        setErrorMessage(\r\n          `a new like to forum ${forum.title} by ${forum.author} NOT added`\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleRemove = () => {\r\n    if (window.confirm(`Remove forum ${forum.title} by ${forum.author}`)) {\r\n      try {\r\n        dispatch(\r\n          setSuccessMessage(`forum ${forum.title} by ${forum.author} delete`)\r\n        )\r\n        dispatch(deleteForum(forum.id))\r\n        navigate('/')\r\n      } catch (error) {\r\n        dispatch(\r\n          setErrorMessage(`forum ${forum.title} by ${forum.author} NOT deleted`)\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddComment = (e) => {\r\n    e.preventDefault()\r\n    dispatch(addComment(forum.id, e.target.comment.value))\r\n    e.target.comment.value = ''\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ width: '100%' }}>\r\n      {allowRemove && (<CardHeader\r\n        action={\r\n          <IconButton onClick={handleRemove}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        }\r\n        sx={{ float: 'right', width: '5%' }}\r\n      />)}\r\n      <CardContent>\r\n        <div style={{  wordWrap: 'break-word', }}>\r\n          <Typography  variant=\"h4\">\r\n            {forum.title}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h6\" >\r\n            {`By ${forum.author}, ${forum.createdAt.split('T')[0]}`}\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n      <CardContent>\r\n        <div style={{  wordWrap: 'break-word', }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" class=\"word-break\">\r\n            {forum.content}\r\n          </Typography>\r\n          <br></br>\r\n          <a href={forum.url}>{forum.url}</a>\r\n        </div>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"like\" onClick={addLike}>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <Typography>\r\n          {forum.likes}\r\n        </Typography>\r\n        <Typography marginLeft={'auto'}>\r\n          Comments\r\n        </Typography>\r\n        <ExpandMore\r\n          expand={expanded}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </ExpandMore>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <form onSubmit={handleAddComment}>\r\n            <input type=\"text\" name=\"comment\" />\r\n            <button type=\"submit\">add comment</button>\r\n          </form>\r\n          <ul>\r\n            {forum.comments.map((comment, index) => (\r\n              <li key={index} style={{ wordWrap: 'break-word', }}>{comment} </li>\r\n            ))}\r\n          </ul>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Forum","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { userLogin } from '../reducers/userReducer'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    display: 'block'\r\n  }\r\n})\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const classes = useStyles()\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    dispatch(userLogin(username, password))\r\n    setUsername('')\r\n    setPassword('')\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      direction=\"column\"\r\n      style={{ minHeight: '50vh' }}\r\n      spacing={5}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h3\" color=\"primary\">\r\n          Login\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <form onSubmit={handleLogin}>\r\n          <TextField\r\n            className={classes.field}\r\n            id=\"standard-basic\"\r\n            label=\"username\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n            required\r\n            variant='outlined'\r\n            color='secondary'\r\n            style={{ marginBottom: '2' }}\r\n          />\r\n          <TextField\r\n            className={classes.field}\r\n            id=\"standard-basic\"\r\n            label=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n            required\r\n            variant='outlined'\r\n            color='secondary'\r\n          />\r\n          <ButtonGroup>\r\n            <Button\r\n              type='submit'\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              id=\"login-button\"\r\n            >\r\n          LOGIN\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to=\"/signup\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              id=\"signup-button\"\r\n            >\r\n          SIGN UP\r\n            </Button>\r\n          </ButtonGroup>\r\n        </form>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h4\" color=\"primary\">\r\n          Guest User:\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          username: Guest\r\n          <br></br>\r\n          password: ts1eu2G3\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","\r\nimport React ,{ useState }from 'react'\r\nimport { Button, ButtonGroup, Container, makeStyles, Typography } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport SendIcon from '@mui/icons-material/Send'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addForum } from '../reducers/forumsReducer'\r\nimport { setSuccessMessage, setErrorMessage } from '../reducers/messageReducer'\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    display: 'block'\r\n  }\r\n})\r\n\r\nconst ForumForm = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [titleError, setTitleError] = useState(false)\r\n  const [authorError, setAuthorError] = useState(false)\r\n  const [urlError, setUrlError] = useState(false)\r\n  const [contentError, setContentError] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const classes = useStyles()\r\n\r\n\r\n  const onSubmitHandleForm = (event) => {\r\n    event.preventDefault()\r\n    setTitleError(false)\r\n    setAuthorError(false)\r\n    setUrlError(false)\r\n    setContentError(false)\r\n\r\n    if (title.length < 1) {\r\n      setTitleError(true)\r\n      dispatch(setErrorMessage('title must be at least 1 characters'))\r\n    } else if (content.length < 1) {\r\n      setContentError(true)\r\n      dispatch(setErrorMessage('content must be at least 1 characters'))\r\n    } else if (author.length < 1) {\r\n      setAuthorError(true)\r\n      dispatch(setErrorMessage('author name must be at least 1 characters'))\r\n    }  else if (url.length < 1) {\r\n      setUrlError(true)\r\n      dispatch(setErrorMessage('URL is required'))\r\n    }\r\n    else {\r\n      dispatch(addForum(title, content, author, url))\r\n      dispatch(setSuccessMessage(`a new forum ${title} by ${author} added`))\r\n      setTitle('')\r\n      setAuthor('')\r\n      setUrl('')\r\n      setContent('')\r\n      navigate('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h3\" color=\"primary\">\r\n          Create New Post\r\n      </Typography>\r\n      <form onSubmit={onSubmitHandleForm}>\r\n        <TextField\r\n          fullWidth\r\n          className={classes.field}\r\n          id=\"standard-basic\"\r\n          label=\"title\"\r\n          value={title}\r\n          name=\"Title\"\r\n          onChange={({ target }) => setTitle(target.value)}\r\n          required\r\n          variant='outlined'\r\n          color='secondary'\r\n          error={titleError}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          className={classes.field}\r\n          id=\"standard-basic\"\r\n          label=\"content\"\r\n          value={content}\r\n          multiline\r\n          rows={6}\r\n          name=\"Content\"\r\n          onChange={({ target }) => setContent(target.value)}\r\n          required\r\n          variant='outlined'\r\n          color='secondary'\r\n          error={contentError}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          className={classes.field}\r\n          id=\"standard-basic\"\r\n          label=\"author\"\r\n          value={author}\r\n          name=\"Author\"\r\n          onChange={({ target }) => setAuthor(target.value)}\r\n          required\r\n          variant='outlined'\r\n          color='secondary'\r\n          error={authorError}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          className={classes.field}\r\n          id=\"standard-basic\"\r\n          label=\"url\"\r\n          value={url}\r\n          name=\"Url\"\r\n          onChange={({ target }) => setUrl(target.value)}\r\n          required\r\n          variant='outlined'\r\n          color='secondary'\r\n          error={urlError}\r\n        />\r\n        <ButtonGroup>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            id=\"submit-forum\"\r\n            endIcon={<SendIcon />}\r\n          >\r\n              POST\r\n          </Button>\r\n          <Button\r\n            component={ Link }\r\n            to=\"/\"\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            id=\"signup-button\"\r\n          >\r\n              CANCEL\r\n          </Button>\r\n        </ButtonGroup>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ForumForm","import React from 'react'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return <Alert severity={message.type}>{message.text}</Alert>\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { userLogout } from '../reducers/userReducer'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport LogoutIcon from '@mui/icons-material/Logout'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}))\r\n\r\nconst Navigation = () => {\r\n  const dispatch = useDispatch()\r\n  const currentUser = useSelector((state) => state.user)\r\n  const navigate = useNavigate()\r\n\r\n  const handleLogout = () => {\r\n    dispatch(userLogout())\r\n    navigate('/login')\r\n  }\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title} >\r\n            Forum App\r\n          </Typography>\r\n          {currentUser !== null ? (\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <>\r\n                    <Typography>\r\n                      {currentUser.name}\r\n                    </Typography>\r\n                    <Tooltip title=\"Logout\">\r\n                      <IconButton\r\n                        onClick={handleLogout}\r\n                        aria-label=\"logout\"\r\n                      >\r\n                        <LogoutIcon style={{ color: '#FFFFFF' }} fontSize='large' />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </>\r\n                }\r\n              />\r\n            </FormGroup>\r\n          ) : (\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Tooltip title=\"Login\">\r\n                    <IconButton\r\n                      onClick={handleLogout}\r\n                      aria-label=\"login\"\r\n                    >\r\n                      <LoginIcon style={{ color: '#FFFFFF' }} fontSize='large' />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </FormGroup>\r\n          )}\r\n          <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n            <Button variant=\"contained\">\r\n              <Link to=\"/\" style={{ color: '#fff' }}>\r\n                Forums\r\n              </Link>\r\n            </Button>\r\n            <Button variant=\"contained\">\r\n              <Link to=\"/users\" style={{ color: '#fff' }}>\r\n                Users\r\n              </Link>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { userCreate } from '../reducers/userReducer'\r\nimport { setErrorMessage } from '../reducers/messageReducer'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    display: 'block'\r\n  }\r\n})\r\n\r\nconst SignUpForm = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [usernameError, setUserError] = useState(false)\r\n  const [passwordError, setPasswordError] = useState(false)\r\n  const [nameError, setNameError] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const classes = useStyles()\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n    setNameError(false)\r\n    setPasswordError(false)\r\n    setUserError(false)\r\n\r\n    if (username.length < 3) {\r\n      setUserError(true)\r\n      dispatch(setErrorMessage('username must at least 6 characters'))\r\n    } else if (name.length < 3) {\r\n      setNameError(true)\r\n      dispatch(setErrorMessage('name must be at least 2 characters'))\r\n    } else if (password.length < 3) {\r\n      setPasswordError(true)\r\n      dispatch(setErrorMessage('password must be at least 8 characters'))\r\n    }\r\n    else {\r\n      dispatch(userCreate(username, name, password))\r\n      setUsername('')\r\n      setPassword('')\r\n      setName('')\r\n      navigate('/login')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      direction=\"column\"\r\n      style={{ minHeight: '50vh' }}\r\n      spacing={5}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h3\" color=\"primary\">\r\n          Sign Up\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <form onSubmit={handleLogin}>\r\n          <TextField\r\n            className={classes.field}\r\n            id=\"standard-basic\"\r\n            label=\"username\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n            required\r\n            variant='outlined'\r\n            color='secondary'\r\n            error={usernameError}\r\n          />\r\n          <TextField\r\n            className={classes.field}\r\n            id=\"standard-basic\"\r\n            label=\"name\"\r\n            value={name}\r\n            name=\"Name\"\r\n            onChange={({ target }) => setName(target.value)}\r\n            required\r\n            variant='outlined'\r\n            color='secondary'\r\n            error={nameError}\r\n          />\r\n          <TextField\r\n            className={classes.field}\r\n            id=\"standard-basic\"\r\n            label=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n            required\r\n            variant='outlined'\r\n            color='secondary'\r\n            error={passwordError}\r\n          />\r\n          <ButtonGroup>\r\n            <Button\r\n              type='submit'\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              id=\"login-button\"\r\n            >\r\n          SUBMIT\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to=\"/login\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              id=\"signup-button\"\r\n            >\r\n          CANCEL\r\n            </Button>\r\n          </ButtonGroup>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SignUpForm\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { initializeForums } from './reducers/forumsReducer'\r\nimport { setUser } from './reducers/userReducer'\r\nimport { Routes, Route, Link, useMatch, useNavigate } from 'react-router-dom'\r\n\r\nimport Users from './components/Users'\r\nimport User from './components/User'\r\nimport Forum from './components/Forum'\r\nimport LoginForm from './components/LoginForm'\r\nimport ForumForm from './components/ForumForm'\r\nimport Notification from './components/Notification'\r\nimport Navigation from './components/Navigation'\r\n\r\nimport { Divider, ThemeProvider } from '@material-ui/core'\r\nimport { createTheme } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { lightBlue } from '@material-ui/core/colors'\r\nimport SignUpForm from './components/SignUpForm'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddIcon from '@mui/icons-material/Add'\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0e4686'\r\n    },\r\n    secondary: lightBlue,\r\n  }\r\n})\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const forums = useSelector((state) => state.forums)\r\n  const message = useSelector((state) => state.message)\r\n  const currentUser = useSelector((state) => state.user)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    dispatch(setUser())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeForums())\r\n  }, [dispatch])\r\n\r\n\r\n  const matchUserId = useMatch('/users/:id')\r\n  const userForums = matchUserId\r\n    ? forums.filter((forum) => forum.user.id === matchUserId.params.id)\r\n    : null\r\n\r\n  const matchForumId = useMatch('/forums/:id')\r\n  const currentForum = matchForumId\r\n    ? forums.find((forum) => {\r\n      return forum.id === matchForumId.params.id\r\n    })\r\n    : null\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Navigation />\r\n      <Container maxWidth=\"sm\" style={{ marginTop: '2rem' }}>\r\n        <Notification message={message} />\r\n        <Routes>\r\n          <Route path=\"/users/:id\" element={<User forums={userForums} />} />\r\n          <Route path=\"/users\" element={<Users />} />\r\n          <Route path=\"/forums/:id\" element={<Forum forum={currentForum} />} />\r\n          <Route path=\"/login\" element={<LoginForm />} />\r\n          <Route path=\"/signup\" element={<SignUpForm />} />\r\n          <Route path=\"/forums/create\" element={<ForumForm />} />\r\n          <Route path=\"/\" element= {\r\n            <>\r\n              <Typography color=\"primary\" variant=\"h3\" >\r\n                Forums:\r\n              </Typography>\r\n              {currentUser === null ? (\r\n                <Typography color=\"secondary\">\r\n                    Login to create posts\r\n                </Typography>\r\n              ) : (\r\n                <Button\r\n                  component={ Link }\r\n                  to='/forums/create'\r\n                  variant=\"outlined\"\r\n                  endIcon={<AddIcon />}\r\n                  color=\"primary\">\r\n                  Create Forum\r\n                </Button>\r\n              )}\r\n              <List\r\n                component=\"nav\"\r\n                aria-label=\"mailbox folders\"\r\n              >\r\n                {forums\r\n                  .sort((a, b) => b.likes - a.likes)\r\n                  .map((forum) => {\r\n                    return (\r\n                      <>\r\n                        <ListItem\r\n                          key={forum.id}\r\n                          button\r\n                          onClick={() => navigate(`forums/${forum.id}`)}\r\n                          sx={{\r\n                            maxWidth: 300\r\n                          }}\r\n                        >\r\n                          <ListItemText primary={forum.title} secondary={`By ${forum.author}`}\r\n                            primaryTypographyProps={{\r\n                              variant: 'subtitle2',\r\n                              style: {\r\n                                whiteSpace: 'nowrap',\r\n                                overflow: 'hidden',\r\n                                textOverflow: 'ellipsis'\r\n                              }\r\n                            }}\r\n                            secondaryTypographyProps={{\r\n                              variant: 'caption',\r\n                              style: {\r\n                                whiteSpace: 'nowrap',\r\n                                overflow: 'hidden',\r\n                                textOverflow: 'ellipsis'\r\n                              }\r\n                            }}/>\r\n                        </ListItem>\r\n                        <Divider />\r\n                      </>\r\n                    )\r\n                  })}\r\n              </List>\r\n            </>\r\n          } />\r\n        </Routes>\r\n      </Container>\r\n    </ ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport forumsReducer from './reducers/forumsReducer'\r\nimport messageReducer from './reducers/messageReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport allUsersReducer from './reducers/allUsersReducer'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    forums: forumsReducer,\r\n    message: messageReducer,\r\n    user: userReducer,\r\n    users: allUsersReducer,\r\n  }\r\n})\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}